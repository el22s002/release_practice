name: Wheels

on:
#   push:
#     branches: [ "main" ]
#     paths:
#       - cpp_ext/src/*
  workflow_dispatch:

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    
    - name: Install OpenCV and other dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake libopencv-dev
        
    - uses: pypa/cibuildwheel@v2.13.0
      env:
        # Cross-compile on macOS
        CIBW_ARCHS_MACOS: x86_64 arm64

        # Temporary: use pre-release Python 3.12 for stable ABI builds
        CIBW_PRERELEASE_PYTHONS: True
      with:
        package-dir: ./cpp_ext
        config-file: "{package}/pyproject.toml"

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: wheelhouse/*.whl
        
    - name: Display structure of downloaded files
      run: ls -R

  push_wheels:
    name: Push wheels
    needs: build_wheels
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download wheels
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: ./cpp_ext/dist
        
    - name: Display structure of downloaded files
      run: ls -R
      
    - name: Push generated wheels
      run: |
        git config user.name github-actions[bot]
        git config user.email github-actions[bot]@users.noreply.github.com
        git add .
        if git commit -m "Generate files by GitHub Actions"; then
            git push
        fi
        
