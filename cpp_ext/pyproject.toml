[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "nanobind-example"
version = "0.0.1"
description = "An example minimal project that compiles bindings using nanobind and scikit-build"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { name = "Wenzel Jakob", email = "wenzel.jakob@epfl.ch" },
]
classifiers = [
    "License :: BSD",
]

[project.urls]
Homepage = "https://github.com/wjakob/nanobind_example"


[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"


[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1
skip = ["cp38-*", "pp38-*", "cp310-*", "pp310-*", "cp311-*", "pp311-*", "cp312-*", "pp312-*"] # Skip CPython and PyPy 3.8
archs = ["auto64"]          # Only target 64 bit architectures

[tool.cibuildwheel.macos]
# "brew install opencv"
before-all = ["brew install libomp"]

[tool.cibuildwheel.macos.environment]
#MACOSX_DEPLOYMENT_TARGET = "12.00"  # Needed for full C++17 support

# [tool.cibuildwheel.linux]
# before-all = ["git clone --depth 1 --branch 4.6.0 https://github.com/opencv/opencv.git", "cd opencv && mkdir -p build && cd build", "cmake .. -DBUILD_LIST=core", "cmake --build .", "cmake --install ."]

# [tool.cibuildwheel.windows]
# before-all = ["choco install opencv"]
# environment = { OpenCV_DIR="c:/tools/opencv/build" }
